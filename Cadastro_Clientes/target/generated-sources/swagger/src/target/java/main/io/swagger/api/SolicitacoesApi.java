/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.SolicitacaoCadastroResponse;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-04-20T00:37:01.854-03:00")

@Api(value = "solicitacoes", description = "the solicitacoes API")
public interface SolicitacoesApi {

    @ApiOperation(value = "Faz atualização do status da Solicitação de cadastro do Cliente", notes = "", response = Void.class, tags={ "Solicitacao", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Status da Solicitação de Cadastro do Cliente atualizado com Sucesso", response = Void.class),
        @ApiResponse(code = 400, message = "Request Inválida", response = Void.class),
        @ApiResponse(code = 404, message = "Nao foi possível encontrar os dados do Cliente", response = Void.class),
        @ApiResponse(code = 500, message = "Erro Interno ao Atualizar Status da Solicitação de Cadastro do Cliente", response = Void.class) })
    
    @RequestMapping(value = "/solicitacoes",
        produces = { "application/json" }, 
        method = RequestMethod.PATCH)
    ResponseEntity<Void> atualizaStatusSolicitacaoCliente(@ApiParam(value = "Id da Solicitacao" ,required=true) @RequestHeader(value="id", required=true) Long id,@ApiParam(value = "Status da Solicitação de cadastro do Cliente" , allowableValues="APROVADA, REPROVADA, EM_ANALISE_DOCUMENTOS, EM_ANALISE_FRAUDE, EM_ANALISE_CREDITO") @RequestHeader(value="status", required=false) String status);


    @ApiOperation(value = "Obtem os dados de solicitações de um Cliente para um periodo específico", notes = "", response = SolicitacaoCadastroResponse.class, responseContainer = "List", tags={ "Solicitacao", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Sucesso ao pesquisar dados de Solicitações do Cliente", response = SolicitacaoCadastroResponse.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Request Inválida", response = Void.class),
        @ApiResponse(code = 404, message = "Não foi possível encontrar os dados de Solicitações do Cliente", response = Void.class),
        @ApiResponse(code = 500, message = "Erro Interno ao Cadastrar Cliente", response = Void.class) })
    
    @RequestMapping(value = "/solicitacoes",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<SolicitacaoCadastroResponse>> obtemSolicitacoesClienteNoPeriodo(@ApiParam(value = "CPF/CNPJ do Cliente" ,required=true) @RequestHeader(value="cpf_cnpj", required=true) String cpfCnpj,@ApiParam(value = "Data inicial para a busca das solicitações - Padrao dd/MM/YYYY" ,required=true) @RequestHeader(value="data_inicial", required=true) String dataInicial,@ApiParam(value = "Data final para a busca das solicitações - Padrao dd/MM/YYYY" ,required=true) @RequestHeader(value="data_final", required=true) String dataFinal);

}
